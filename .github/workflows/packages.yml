name: packages

on:
  workflow_dispatch:
  pull_request:

permissions:
  contents: read
  pull-requests: read

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-change-type:
    runs-on: ubuntu-latest-8-cores
    outputs:
      packages: ${{ steps.filter.outputs.packages }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Path filter check
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            packages:
              - 'packages/**/*'

  lint:
    name: Lint
    needs: [detect-change-type]
    if: ${{ needs.detect-change-type.outputs.packages == 'true' }}
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile

      - name: Lint
        run: pnpm run lint

  build-and-test:
    name: Build and test
    needs: [lint]
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Run tests
        run: pnpm turbo test

    release-sdk:
      name: Release @grafbase/sdk
      needs: [build-and-test]
      runs-on: ubuntu-latest-8-cores
      if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'sdk-')
      steps:
        - name: Get sources
          uses: actions/checkout@v3

        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Install pnpm
          uses: pnpm/action-setup@v2
          id: pnpm-install
          with:
            version: 8
            run_install: false

        - name: Get pnpm store directory
          id: pnpm-cache
          shell: bash
          run: |
            echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

        - uses: actions/cache@v3
          name: Setup pnpm cache
          with:
            path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              ${{ runner.os }}-pnpm-store-

        - name: Install dependencies
          run: |
            pnpm install --ignore-scripts --frozen-lockfile

        - name: Build @grafbase/sdk
          working-directory: ./packages/grafbase-sdk
          run: |
            pnpm build

        - name: Publish @grafbase/sdk
          working-directory: ./packages/grafbase-sdk
          run: |
            npm set "//registry.npmjs.org/:_authToken" ${{ secrets.NPM_ACCESS_TOKEN }}
            npm publish
